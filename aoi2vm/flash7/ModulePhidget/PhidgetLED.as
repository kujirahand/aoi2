class PhidgetLED extends Phidget {	private var numLEDs:Number;	var LED_Power:Array = new Array();		//constructor	public function PhidgetLED() {		for(var i=0;i<64;i++) {			LED_Power[i]=0;		}	}	//getters and setters	public function GetNumLEDs():Number{		return numLEDs;	}	public function GetDiscreteLED(Index:Number):Number {		return LED_Power[Index];	}	public function SetDiscreteLED(Index:Number,newVal:Number){		mySocket.send(Constants.PNET_DATAOUT+","+Index+","+newVal);		LED_Power[Index] = newVal;	}		//private functions	private function userOnConnect(success) {		if (success) {			mySocket.send(Constants.PNET_OPENPACKET+","+Constants.PHIDDEF_LED+","+serialNumber);		}	}	private function init(dataArray:Array) {		var spec = parseInt(dataArray[2]);		numLEDs = Constants.Phid_Device_Def[spec][3];	}}