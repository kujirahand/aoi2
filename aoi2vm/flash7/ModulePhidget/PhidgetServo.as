class PhidgetServo extends Phidget {	private var numMotors:Number;	var servoPosition:Array = new Array();		//constructor	public function PhidgetServo() {		for(var i=0;i<8;i++) {			servoPosition[i]=10;		}	}	//getters and setters	public function GetMotorPosition(Index:Number):Number{		return servoPosition[Index];	}	public function SetMotorPosition(Index:Number, Position:Number){		mySocket.send(Constants.PNET_DATAOUT+","+Index+","+Position);		servoPosition[Index] = Position;	}	public function GetNumMotors():Number{		return numMotors;	}		//private functions	private function userOnConnect(success) {		if (success) {			mySocket.send(Constants.PNET_OPENPACKET+","+Constants.PHIDDEF_SERVO+","+serialNumber);		}	}	private function init(dataArray:Array) {		var spec = parseInt(dataArray[2]);		numMotors = Constants.Phid_Device_Def[spec][3];	}}