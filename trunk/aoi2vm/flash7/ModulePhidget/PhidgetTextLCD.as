class PhidgetTextLCD extends Phidget {	private var numRows:Number, numColumns:Number;	private var m_blnCursorOn:Boolean ,m_blnCursorBlink:Boolean ,m_blnBacklight:Boolean;	//getters and setters	public function GetNumRows():Number{		return numRows;	}	public function GetNumColumns():Number{		return numColumns;	}	public function GetBacklight():Boolean{		return m_blnBacklight;	}	public function GetCursorOn():Boolean{		return m_blnCursorOn;	}	public function GetCursorBlink():Boolean{		return m_blnCursorBlink;	}	public function SetBacklight(newVal:Boolean){		var i=0;		if(newVal)			i=1;		mySocket.send(Constants.PNET_DATAOUT+","+1+","+i);		m_blnBacklight = newVal;	}	public function SetCursorOn(newVal:Boolean){		var i=0;		if(newVal)			i=1;		mySocket.send(Constants.PNET_DATAOUT+","+2+","+i);		m_blnCursorOn = newVal;	}	public function SetCursorBlink(newVal:Boolean){		var i=0;		if(newVal)			i=1;		mySocket.send(Constants.PNET_DATAOUT+","+3+","+i);		m_blnCursorBlink = newVal;	}	public function SetDisplayString(Row:Number, newVal:String){		mySocket.send(Constants.PNET_DATAOUT+","+0+","+Row+","+newVal);	}		//private functions	private function userOnConnect(success) {		if (success) {			mySocket.send(Constants.PNET_OPENPACKET+","+Constants.PHIDDEF_TEXTLCD+","+serialNumber);		}	}	private function init(dataArray:Array) {		var spec = parseInt(dataArray[2]);		numRows = Constants.Phid_Device_Def[spec][3];		numColumns = Constants.Phid_Device_Def[spec][4];	}}